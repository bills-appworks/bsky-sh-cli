#!/bin/sh
# Bluesky in the shell
# A Bluesky CLI (Command Line Interface) implementation in shell script
# Author Bluesky:@billsbs.bills-appworks.net
# 
# Copyright (c) 2024 bills-appworks
# This software is released under the MIT License.
# http://opensource.org/licenses/mit-license.php
#
# API Reference: https://docs.bsky.app/docs/api/com-atproto-server-refresh-session
FILENAME='com.atproto.server.refreshSession'
FILE_DIR=`dirname "$0"`
FILE_DIR=`(cd "${FILE_DIR}" && pwd)`

if [ -z "${BSKYSHCLI_API_PATH}" ]
then
  BSKYSHCLI_API_PATH="${FILE_DIR}"
fi
# SC1091
# shellcheck source=SCRIPTDIR/common.sh
. "${BSKYSHCLI_API_PATH}/common.sh"
# SC1091
# shellcheck source=SCRIPTDIR/proxy.sh
. "${BSKYSHCLI_API_PATH}/proxy.sh"

param_refresh_jwt=$1

debug "${FILENAME}" 'START'

# debug mode turn off (prevent password recording)
debug_mode_suppress

debug_single "${FILENAME}"
result=`api_post_bearer 'com.atproto.server.refreshSession' "${param_refresh_jwt}" | tee "${BSKYSHCLI_DEBUG_SINGLE}"`

# restore debug mode
debug_mode_restore

error_element=`_p "${result}" | jq -r '.error_element // empty'`

if [ -z "${error_element}" ]
then
  handle=`_p "${result}" | jq -r '.handle'`
  access_jwt=`_p "${result}" | jq -r '.accessJwt'`
  refresh_jwt=`_p "${result}" | jq -r '.refreshJwt'`
  timestamp=`get_timestamp_timezone`
  # CAUTION: key=value pairs are separated by tab characters
  update_session_file "${SESSION_KEY_REFRESH_TIMESTAMP}=${timestamp}	${SESSION_KEY_HANDLE}=${handle}	${SESSION_KEY_ACCESS_JWT}=${access_jwt}	${SESSION_KEY_REFRESH_JWT}=${refresh_jwt}"
fi

_p "${result}"

debug "${FILENAME}" 'END'
